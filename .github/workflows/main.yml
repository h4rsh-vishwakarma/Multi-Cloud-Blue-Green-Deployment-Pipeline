name: Multi-Cloud CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:

  build-and-push:
    runs-on: ubuntu-latest
    steps:
     #Downlload the code 
      - name: Checkout code
        uses: actions/checkout@v3

      # DockerHub Login
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # build the docker image and send to dockerhub
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./app
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-flask-app:${{ github.sha }}

  # deploy in cloud
  deploy:
    
    needs: build-and-push
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cloud: [aws, gcp] 

    steps:
     #again download the code 
      - name: Checkout code
        uses: actions/checkout@v3

      
      - name: Determine Target Environment
        id: bluegreen
        run: |
         
          if [ $(( $(git rev-parse --short HEAD | tr -d 'a-f') % 2 )) -eq 0 ]; then
            echo "target_color=green" >> $GITHUB_OUTPUT
          else
            echo "target_color=blue" >> $GITHUB_OUTPUT
          fi

      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

     
      - name: Deploy to ${{ matrix.cloud }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         
        run: |
          cd terraform/${{ matrix.cloud }}
          terraform init
          terraform apply -auto-approve \
            -var="env_color=${{ steps.bluegreen.outputs.target_color }}" \
            -var="docker_image_tag=${{ github.sha }}"
